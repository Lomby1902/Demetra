# PIPELINE DEFINITION
# Name: simple-pipeline
# Description: A simple pipeline that generates, preprocesses data, and trains a model.
components:
  comp-generate-data:
    executorLabel: exec-generate-data
    outputDefinitions:
      parameters:
        Output:
          parameterType: STRING
  comp-preprocess-data:
    executorLabel: exec-preprocess-data
    inputDefinitions:
      parameters:
        data_path:
          parameterType: STRING
    outputDefinitions:
      parameters:
        Output:
          parameterType: STRING
  comp-train-model:
    executorLabel: exec-train-model
    inputDefinitions:
      parameters:
        preprocessed_data_path:
          parameterType: STRING
    outputDefinitions:
      parameters:
        Output:
          parameterType: STRING
deploymentSpec:
  executors:
    exec-generate-data:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - generate_data
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.8.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&\
          \  python3 -m pip install --quiet --no-warn-script-location 'pandas' 'scikit-learn'\
          \ 'joblib' && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef generate_data() -> str:\n    import pandas as pd\n    import\
          \ numpy as np\n\n    data = {\n        'feature1': np.random.rand(100),\n\
          \        'feature2': np.random.rand(100),\n        'label': np.random.randint(0,\
          \ 2, 100)\n    }\n\n    df = pd.DataFrame(data)\n    data_path = '/tmp/data.csv'\n\
          \    df.to_csv(data_path, index=False)\n\n    return data_path\n\n"
        image: python:3.8
    exec-preprocess-data:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - preprocess_data
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.8.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&\
          \  python3 -m pip install --quiet --no-warn-script-location 'pandas' 'scikit-learn'\
          \ 'joblib' && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef preprocess_data(data_path: str) -> str:\n    import pandas as\
          \ pd\n    from sklearn.preprocessing import StandardScaler\n\n    df = pd.read_csv(data_path)\n\
          \    scaler = StandardScaler()\n    df[['feature1', 'feature2']] = scaler.fit_transform(df[['feature1',\
          \ 'feature2']])\n\n    preprocessed_data_path = '/tmp/data.csv'\n    df.to_csv(preprocessed_data_path,\
          \ index=False)\n\n    return preprocessed_data_path\n\n"
        image: python:3.8
    exec-train-model:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - train_model
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.8.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&\
          \  python3 -m pip install --quiet --no-warn-script-location 'pandas' 'scikit-learn'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef train_model(preprocessed_data_path: str) -> str:\n    import\
          \ pandas as pd\n    from sklearn.linear_model import LogisticRegression\n\
          \    from sklearn.model_selection import train_test_split\n    from sklearn.metrics\
          \ import accuracy_score\n    import joblib\n\n    df = pd.read_csv(preprocessed_data_path)\n\
          \    X = df[['feature1', 'feature2']]\n    y = df['label']\n\n    X_train,\
          \ X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\
          \n    model = LogisticRegression()\n    model.fit(X_train, y_train)\n\n\
          \    predictions = model.predict(X_test)\n    accuracy = accuracy_score(y_test,\
          \ predictions)\n    print(f'Model accuracy: {accuracy}')\n\n    model_path\
          \ = '/tmp/model.joblib'\n    joblib.dump(model, model_path)\n\n    return\
          \ model_path\n\n"
        image: python:3.8
pipelineInfo:
  description: A simple pipeline that generates, preprocesses data, and trains a model.
  name: simple-pipeline
root:
  dag:
    tasks:
      generate-data:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-generate-data
        taskInfo:
          name: generate-data
      preprocess-data:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-preprocess-data
        dependentTasks:
        - generate-data
        inputs:
          parameters:
            data_path:
              taskOutputParameter:
                outputParameterKey: Output
                producerTask: generate-data
        taskInfo:
          name: preprocess-data
      train-model:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-train-model
        dependentTasks:
        - preprocess-data
        inputs:
          parameters:
            preprocessed_data_path:
              taskOutputParameter:
                outputParameterKey: Output
                producerTask: preprocess-data
        taskInfo:
          name: train-model
schemaVersion: 2.1.0
sdkVersion: kfp-2.8.0
